pipeline{
    agent any
   /* 
    parameters{
    choice choices: ['development', 'master', 'qa', 'uat'], name: 'branch'
    }
    */
    tools{
        maven "maven3.8.4"
    }
    
   environment {
   	
	def BranchName = "${BRANCH_NAME}"
   }
   
   def BranchName = "${BRANCH_NAME}"
   
    stages{
        
       //checkout starting
        stage('Checkout'){
            steps{
            git branch: "$BRANCH_NAME", credentialsId: 'github_new_creds', url: 'https://github.com/devopstools12/maven-web-application.git'                
            }
        }//checkout closing
        
        //build starting
         stage('Build'){
            steps{
                sh 'mvn clean package'
            }
        }//build closing
        
        //execute starting
        stage('Execute sonar report'){
            steps{
                sh 'mvn sonar:sonar'
            }
        }//execute closing
        
        //upload starting
        stage('Upload to artifact repository'){
          steps{
              sh 'mvn deploy'
          }
        }//upload closing
    
        //deploying started
stage('Deploy to tomcat'){
   steps{
	script {
     //sshagent(credentials: ['jenkins-tomcat-server'])
         sshagent(['b802621d-4397-4303-a50c-7adc73e2cfb7']){
     sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.38.47:/opt/apache-tomcat-9.0.65/webapps"
       }
     }
  }
}//deploying closed
        
    }//stages closing
    
    
post {
  success {
      notifyBuild('SUCCESSFUL')
  }
  failure {
      notifyBuild('FAILED')
 }
  unsuccessful {
     notifyBuild('UNSUCCESSFUL')
  }
}

}//pipeline closing

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
   slackSend (color: colorCode, message: summary)
}
